// simple expressions

1 + 2; // int and int
1e9 + 2e9; // int64 and int64
1.234 + 2.345; // float and float
2 - 3; // int and int
2e9 - 3e9; // int64 and int64
2.345 - 3.456; // float and float
3 * 4; // int and int
3e9 * 4e9; // int64 and int64
3.456 * 4.567; // float and float
4 / 5; // int and int
4e9 / 5e9; // int64 and int64
4.567 / 5.678; // float and float
5 % 6; // int and int
6e9 % 5e9; // int64 and int64

// compound expressions

1 + 2 + 3; // int and int and int
1e9 + 2e9 + 3e9; // int64 and int64 and int64
1.234 + 2.345 + 3.456; // float and float and float
1 + 2 - 3; // int and int and int
1e9 + 2e9 - 3e9; // int64 and int64 and int64
1.234 + 2.345 - 3.456; // float and float and float
1 + 2 * 3; // int and int and int
1e9 + 2e9 * 3e9; // int64 and int64 and int64
1.234 + 2.345 * 3.456; // float and float and float
1 + 2 / 3; // int and int and int
1e9 + 2e9 / 3e9; // int64 and int64 and int64
1.234 + 2.345 / 3.456; // float and float and float
1 + 2 % 3; // int and int and int
1e9 + 2e9 % 3e9; // int64 and int64 and int64
1.234 + 2.345 % 3.456; // float and float and float
1 - 2 + 3; // int and int and int
1e9 - 2e9 + 3e9; // int64 and int64 and int64
1.234 - 2.345 + 3.456; // float and float and float
1 - 2 - 3; // int and int and int
1e9 - 2e9 - 3e9; // int64 and int64 and int64
1.234 - 2.345 - 3.456; // float and float and float
1 - 2 * 3; // int and int and int
1e9 - 2e9 * 3e9; // int64 and int64 and int64
1.234 - 2.345 * 3.456; // float and float and float
1 - 2 / 3; // int and int and int

// Using parenthesis

23 + (45 + 67); // int and int and int
51 + (72e9 + 93e9); // int and int64 and int64