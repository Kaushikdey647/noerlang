State 116 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier var_decl_list ';'

    7 scoped_var_declaration: STATIC type_specifier var_decl_list ';'
    8                       | type_specifier var_decl_list ';'

    9 var_decl_list: var_decl_list ',' var_decl_init
   10              | var_decl_init

   11 var_decl_init: var_decl_id
   12              | var_decl_id '=' simple_exp

   13 var_decl_id: IDENTIFIER
   14            | IDENTIFIER '[' INTEGER ']'

   15 type_specifier: INT_TYPE
   16               | FLOAT_TYPE
   17               | CHAR_TYPE
   18               | STRING_TYPE

   19 fun_declaration: type_specifier IDENTIFIER '(' params ')' stmt
   20                | IDENTIFIER '(' params ')' stmt

   21 params: param_list
   22       | %empty

   23 param_list: param_list ';' param_type
   24           | param_type

   25 param_type: type_specifier param_id

   26 param_id: IDENTIFIER
   27         | IDENTIFIER '[' ']'

   28 stmt: expression_stmt
   29     | compound_stmt
   30     | selection_stmt
   31     | iteration_stmt
   32     | return_stmt
   33     | break_stmt

   34 expression_stmt: expression ';'
   35                | ';'

   36 compound_stmt: '{' local_declarations stmt_list '}'

   37 local_declarations: local_declarations scoped_var_declaration
   38                   | %empty

   39 stmt_list: stmt_list stmt
   40          | %empty

   41 selection_stmt: IF simple_exp THEN stmt
   42               | IF simple_exp THEN stmt ELSE stmt

   43 iteration_stmt: WHILE '(' expression ')' stmt

   44 return_stmt: RETURN ';'
   45            | RETURN expression ';'

   46 break_stmt: BREAK ';'

   47 expression: mutable ASSIGN expression
   48           | simple_exp

   49 simple_exp: simple_exp LOGICAL unary_rel_exp
   50           | unary_rel_exp

   51 unary_rel_exp: NEGATION rel_exp
   52              | rel_exp

   53 rel_exp: additive_exp RELATIONAL additive_exp
   54        | additive_exp

   55 additive_exp: additive_exp ADDITIVE multiplicative_exp
   56             | multiplicative_exp

   57 multiplicative_exp: multiplicative_exp MULTIPLICATIVE unary_exp
   58                   | unary_exp

   59 unary_exp: UNARY unary_exp
   60          | factor

   61 factor: immutable
   62       | mutable

   63 mutable: IDENTIFIER
   64        | IDENTIFIER '[' expression ']'

   65 immutable: '(' expression ')'
   66          | call
   67          | const

   68 call: IDENTIFIER '(' args ')'

   69 args: arg_list
   70     | %empty

   71 arg_list: arg_list ',' expression
   72         | expression

   73 const: INTEGER
   74      | FLOATING
   75      | STRING
   76      | TRUE
   77      | FALSE
   78      | VOID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 19 20 43 65 68
    ')' (41) 19 20 43 65 68
    ',' (44) 9 71
    ';' (59) 6 7 8 23 34 35 44 45 46
    '=' (61) 12
    '[' (91) 14 27 64
    ']' (93) 14 27 64
    '{' (123) 36
    '}' (125) 36
    error (256)
    INT_TYPE (258) 15
    FLOAT_TYPE (259) 16
    CHAR_TYPE (260) 17
    STRING_TYPE (261) 18
    INTEGER (262) 14 73
    FLOATING (263) 74
    STRING (264) 75
    IF (265) 41 42
    ELSE (266) 42
    WHILE (267) 43
    BREAK (268) 46
    RETURN (269) 44 45
    ASSIGN (270) 47
    IDENTIFIER (271) 13 14 19 20 26 27 63 64 68
    LOGICAL (272) 49
    NEGATION (273) 51
    RELATIONAL (274) 53
    ADDITIVE (275) 55
    MULTIPLICATIVE (276) 57
    UNARY (277) 59
    TRUE (278) 76
    FALSE (279) 77
    STATIC (280) 7
    THEN (281) 41 42
    VOID (282) 78


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    program (38)
        on left: 1
        on right: 0
    declaration_list (39)
        on left: 2 3
        on right: 1 2
    declaration (40)
        on left: 4 5
        on right: 2 3
    var_declaration (41)
        on left: 6
        on right: 4
    scoped_var_declaration (42)
        on left: 7 8
        on right: 37
    var_decl_list (43)
        on left: 9 10
        on right: 6 7 8 9
    var_decl_init (44)
        on left: 11 12
        on right: 9 10
    var_decl_id (45)
        on left: 13 14
        on right: 11 12
    type_specifier (46)
        on left: 15 16 17 18
        on right: 6 7 8 19 25
    fun_declaration (47)
        on left: 19 20
        on right: 5
    params (48)
        on left: 21 22
        on right: 19 20
    param_list (49)
        on left: 23 24
        on right: 21 23
    param_type (50)
        on left: 25
        on right: 23 24
    param_id (51)
        on left: 26 27
        on right: 25
    stmt (52)
        on left: 28 29 30 31 32 33
        on right: 19 20 39 41 42 43
    expression_stmt (53)
        on left: 34 35
        on right: 28
    compound_stmt (54)
        on left: 36
        on right: 29
    local_declarations (55)
        on left: 37 38
        on right: 36 37
    stmt_list (56)
        on left: 39 40
        on right: 36 39
    selection_stmt (57)
        on left: 41 42
        on right: 30
    iteration_stmt (58)
        on left: 43
        on right: 31
    return_stmt (59)
        on left: 44 45
        on right: 32
    break_stmt (60)
        on left: 46
        on right: 33
    expression (61)
        on left: 47 48
        on right: 34 43 45 47 64 65 71 72
    simple_exp (62)
        on left: 49 50
        on right: 12 41 42 48 49
    unary_rel_exp (63)
        on left: 51 52
        on right: 49 50
    rel_exp (64)
        on left: 53 54
        on right: 51 52
    additive_exp (65)
        on left: 55 56
        on right: 53 54 55
    multiplicative_exp (66)
        on left: 57 58
        on right: 55 56 57
    unary_exp (67)
        on left: 59 60
        on right: 57 58 59
    factor (68)
        on left: 61 62
        on right: 60
    mutable (69)
        on left: 63 64
        on right: 47 62
    immutable (70)
        on left: 65 66 67
        on right: 61
    call (71)
        on left: 68
        on right: 66
    args (72)
        on left: 69 70
        on right: 68
    arg_list (73)
        on left: 71 72
        on right: 69 71
    const (74)
        on left: 73 74 75 76 77 78
        on right: 67


State 0

    0 $accept: . program $end

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4
    IDENTIFIER   shift, and go to state 5

    program           go to state 6
    declaration_list  go to state 7
    declaration       go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10
    fun_declaration   go to state 11


State 1

   15 type_specifier: INT_TYPE .

    $default  reduce using rule 15 (type_specifier)


State 2

   16 type_specifier: FLOAT_TYPE .

    $default  reduce using rule 16 (type_specifier)


State 3

   17 type_specifier: CHAR_TYPE .

    $default  reduce using rule 17 (type_specifier)


State 4

   18 type_specifier: STRING_TYPE .

    $default  reduce using rule 18 (type_specifier)


State 5

   20 fun_declaration: IDENTIFIER . '(' params ')' stmt

    '('  shift, and go to state 12


State 6

    0 $accept: program . $end

    $end  shift, and go to state 13


State 7

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4
    IDENTIFIER   shift, and go to state 5

    $default  reduce using rule 1 (program)

    declaration      go to state 14
    var_declaration  go to state 9
    type_specifier   go to state 10
    fun_declaration  go to state 11


State 8

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 9

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 10

    6 var_declaration: type_specifier . var_decl_list ';'
   19 fun_declaration: type_specifier . IDENTIFIER '(' params ')' stmt

    IDENTIFIER  shift, and go to state 15

    var_decl_list  go to state 16
    var_decl_init  go to state 17
    var_decl_id    go to state 18


State 11

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 12

   20 fun_declaration: IDENTIFIER '(' . params ')' stmt

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4

    $default  reduce using rule 22 (params)

    type_specifier  go to state 19
    params          go to state 20
    param_list      go to state 21
    param_type      go to state 22


State 13

    0 $accept: program $end .

    $default  accept


State 14

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 15

   13 var_decl_id: IDENTIFIER .
   14            | IDENTIFIER . '[' INTEGER ']'
   19 fun_declaration: type_specifier IDENTIFIER . '(' params ')' stmt

    '['  shift, and go to state 23
    '('  shift, and go to state 24

    $default  reduce using rule 13 (var_decl_id)


State 16

    6 var_declaration: type_specifier var_decl_list . ';'
    9 var_decl_list: var_decl_list . ',' var_decl_init

    ';'  shift, and go to state 25
    ','  shift, and go to state 26


State 17

   10 var_decl_list: var_decl_init .

    $default  reduce using rule 10 (var_decl_list)


State 18

   11 var_decl_init: var_decl_id .
   12              | var_decl_id . '=' simple_exp

    '='  shift, and go to state 27

    $default  reduce using rule 11 (var_decl_init)


State 19

   25 param_type: type_specifier . param_id

    IDENTIFIER  shift, and go to state 28

    param_id  go to state 29


State 20

   20 fun_declaration: IDENTIFIER '(' params . ')' stmt

    ')'  shift, and go to state 30


State 21

   21 params: param_list .
   23 param_list: param_list . ';' param_type

    ';'  shift, and go to state 31

    $default  reduce using rule 21 (params)


State 22

   24 param_list: param_type .

    $default  reduce using rule 24 (param_list)


State 23

   14 var_decl_id: IDENTIFIER '[' . INTEGER ']'

    INTEGER  shift, and go to state 32


State 24

   19 fun_declaration: type_specifier IDENTIFIER '(' . params ')' stmt

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4

    $default  reduce using rule 22 (params)

    type_specifier  go to state 19
    params          go to state 33
    param_list      go to state 21
    param_type      go to state 22


State 25

    6 var_declaration: type_specifier var_decl_list ';' .

    $default  reduce using rule 6 (var_declaration)


State 26

    9 var_decl_list: var_decl_list ',' . var_decl_init

    IDENTIFIER  shift, and go to state 34

    var_decl_init  go to state 35
    var_decl_id    go to state 18


State 27

   12 var_decl_init: var_decl_id '=' . simple_exp

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    simple_exp          go to state 46
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 53
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 28

   26 param_id: IDENTIFIER .
   27         | IDENTIFIER . '[' ']'

    '['  shift, and go to state 57

    $default  reduce using rule 26 (param_id)


State 29

   25 param_type: type_specifier param_id .

    $default  reduce using rule 25 (param_type)


State 30

   20 fun_declaration: IDENTIFIER '(' params ')' . stmt

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IF          shift, and go to state 58
    WHILE       shift, and go to state 59
    BREAK       shift, and go to state 60
    RETURN      shift, and go to state 61
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    ';'         shift, and go to state 62
    '('         shift, and go to state 45
    '{'         shift, and go to state 63

    stmt                go to state 64
    expression_stmt     go to state 65
    compound_stmt       go to state 66
    selection_stmt      go to state 67
    iteration_stmt      go to state 68
    return_stmt         go to state 69
    break_stmt          go to state 70
    expression          go to state 71
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 31

   23 param_list: param_list ';' . param_type

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4

    type_specifier  go to state 19
    param_type      go to state 74


State 32

   14 var_decl_id: IDENTIFIER '[' INTEGER . ']'

    ']'  shift, and go to state 75


State 33

   19 fun_declaration: type_specifier IDENTIFIER '(' params . ')' stmt

    ')'  shift, and go to state 76


State 34

   13 var_decl_id: IDENTIFIER .
   14            | IDENTIFIER . '[' INTEGER ']'

    '['  shift, and go to state 23

    $default  reduce using rule 13 (var_decl_id)


State 35

    9 var_decl_list: var_decl_list ',' var_decl_init .

    $default  reduce using rule 9 (var_decl_list)


State 36

   73 const: INTEGER .

    $default  reduce using rule 73 (const)


State 37

   74 const: FLOATING .

    $default  reduce using rule 74 (const)


State 38

   75 const: STRING .

    $default  reduce using rule 75 (const)


State 39

   63 mutable: IDENTIFIER .
   64        | IDENTIFIER . '[' expression ']'
   68 call: IDENTIFIER . '(' args ')'

    '['  shift, and go to state 77
    '('  shift, and go to state 78

    $default  reduce using rule 63 (mutable)


State 40

   51 unary_rel_exp: NEGATION . rel_exp

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    rel_exp             go to state 79
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 53
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 41

   59 unary_exp: UNARY . unary_exp

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    unary_exp  go to state 80
    factor     go to state 52
    mutable    go to state 53
    immutable  go to state 54
    call       go to state 55
    const      go to state 56


State 42

   76 const: TRUE .

    $default  reduce using rule 76 (const)


State 43

   77 const: FALSE .

    $default  reduce using rule 77 (const)


State 44

   78 const: VOID .

    $default  reduce using rule 78 (const)


State 45

   65 immutable: '(' . expression ')'

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    expression          go to state 81
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 46

   12 var_decl_init: var_decl_id '=' simple_exp .
   49 simple_exp: simple_exp . LOGICAL unary_rel_exp

    LOGICAL  shift, and go to state 82

    $default  reduce using rule 12 (var_decl_init)


State 47

   50 simple_exp: unary_rel_exp .

    $default  reduce using rule 50 (simple_exp)


State 48

   52 unary_rel_exp: rel_exp .

    $default  reduce using rule 52 (unary_rel_exp)


State 49

   53 rel_exp: additive_exp . RELATIONAL additive_exp
   54        | additive_exp .
   55 additive_exp: additive_exp . ADDITIVE multiplicative_exp

    RELATIONAL  shift, and go to state 83
    ADDITIVE    shift, and go to state 84

    $default  reduce using rule 54 (rel_exp)


State 50

   56 additive_exp: multiplicative_exp .
   57 multiplicative_exp: multiplicative_exp . MULTIPLICATIVE unary_exp

    MULTIPLICATIVE  shift, and go to state 85

    $default  reduce using rule 56 (additive_exp)


State 51

   58 multiplicative_exp: unary_exp .

    $default  reduce using rule 58 (multiplicative_exp)


State 52

   60 unary_exp: factor .

    $default  reduce using rule 60 (unary_exp)


State 53

   62 factor: mutable .

    $default  reduce using rule 62 (factor)


State 54

   61 factor: immutable .

    $default  reduce using rule 61 (factor)


State 55

   66 immutable: call .

    $default  reduce using rule 66 (immutable)


State 56

   67 immutable: const .

    $default  reduce using rule 67 (immutable)


State 57

   27 param_id: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 86


State 58

   41 selection_stmt: IF . simple_exp THEN stmt
   42               | IF . simple_exp THEN stmt ELSE stmt

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    simple_exp          go to state 87
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 53
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 59

   43 iteration_stmt: WHILE . '(' expression ')' stmt

    '('  shift, and go to state 88


State 60

   46 break_stmt: BREAK . ';'

    ';'  shift, and go to state 89


State 61

   44 return_stmt: RETURN . ';'
   45            | RETURN . expression ';'

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    ';'         shift, and go to state 90
    '('         shift, and go to state 45

    expression          go to state 91
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 62

   35 expression_stmt: ';' .

    $default  reduce using rule 35 (expression_stmt)


State 63

   36 compound_stmt: '{' . local_declarations stmt_list '}'

    $default  reduce using rule 38 (local_declarations)

    local_declarations  go to state 92


State 64

   20 fun_declaration: IDENTIFIER '(' params ')' stmt .

    $default  reduce using rule 20 (fun_declaration)


State 65

   28 stmt: expression_stmt .

    $default  reduce using rule 28 (stmt)


State 66

   29 stmt: compound_stmt .

    $default  reduce using rule 29 (stmt)


State 67

   30 stmt: selection_stmt .

    $default  reduce using rule 30 (stmt)


State 68

   31 stmt: iteration_stmt .

    $default  reduce using rule 31 (stmt)


State 69

   32 stmt: return_stmt .

    $default  reduce using rule 32 (stmt)


State 70

   33 stmt: break_stmt .

    $default  reduce using rule 33 (stmt)


State 71

   34 expression_stmt: expression . ';'

    ';'  shift, and go to state 93


State 72

   48 expression: simple_exp .
   49 simple_exp: simple_exp . LOGICAL unary_rel_exp

    LOGICAL  shift, and go to state 82

    $default  reduce using rule 48 (expression)


State 73

   47 expression: mutable . ASSIGN expression
   62 factor: mutable .

    ASSIGN  shift, and go to state 94

    $default  reduce using rule 62 (factor)


State 74

   23 param_list: param_list ';' param_type .

    $default  reduce using rule 23 (param_list)


State 75

   14 var_decl_id: IDENTIFIER '[' INTEGER ']' .

    $default  reduce using rule 14 (var_decl_id)


State 76

   19 fun_declaration: type_specifier IDENTIFIER '(' params ')' . stmt

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IF          shift, and go to state 58
    WHILE       shift, and go to state 59
    BREAK       shift, and go to state 60
    RETURN      shift, and go to state 61
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    ';'         shift, and go to state 62
    '('         shift, and go to state 45
    '{'         shift, and go to state 63

    stmt                go to state 95
    expression_stmt     go to state 65
    compound_stmt       go to state 66
    selection_stmt      go to state 67
    iteration_stmt      go to state 68
    return_stmt         go to state 69
    break_stmt          go to state 70
    expression          go to state 71
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 77

   64 mutable: IDENTIFIER '[' . expression ']'

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    expression          go to state 96
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 78

   68 call: IDENTIFIER '(' . args ')'

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    $default  reduce using rule 70 (args)

    expression          go to state 97
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    args                go to state 98
    arg_list            go to state 99
    const               go to state 56


State 79

   51 unary_rel_exp: NEGATION rel_exp .

    $default  reduce using rule 51 (unary_rel_exp)


State 80

   59 unary_exp: UNARY unary_exp .

    $default  reduce using rule 59 (unary_exp)


State 81

   65 immutable: '(' expression . ')'

    ')'  shift, and go to state 100


State 82

   49 simple_exp: simple_exp LOGICAL . unary_rel_exp

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    unary_rel_exp       go to state 101
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 53
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 83

   53 rel_exp: additive_exp RELATIONAL . additive_exp

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    additive_exp        go to state 102
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 53
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 84

   55 additive_exp: additive_exp ADDITIVE . multiplicative_exp

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    multiplicative_exp  go to state 103
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 53
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 85

   57 multiplicative_exp: multiplicative_exp MULTIPLICATIVE . unary_exp

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    unary_exp  go to state 104
    factor     go to state 52
    mutable    go to state 53
    immutable  go to state 54
    call       go to state 55
    const      go to state 56


State 86

   27 param_id: IDENTIFIER '[' ']' .

    $default  reduce using rule 27 (param_id)


State 87

   41 selection_stmt: IF simple_exp . THEN stmt
   42               | IF simple_exp . THEN stmt ELSE stmt
   49 simple_exp: simple_exp . LOGICAL unary_rel_exp

    LOGICAL  shift, and go to state 82
    THEN     shift, and go to state 105


State 88

   43 iteration_stmt: WHILE '(' . expression ')' stmt

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    expression          go to state 106
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 89

   46 break_stmt: BREAK ';' .

    $default  reduce using rule 46 (break_stmt)


State 90

   44 return_stmt: RETURN ';' .

    $default  reduce using rule 44 (return_stmt)


State 91

   45 return_stmt: RETURN expression . ';'

    ';'  shift, and go to state 107


State 92

   36 compound_stmt: '{' local_declarations . stmt_list '}'
   37 local_declarations: local_declarations . scoped_var_declaration

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4
    STATIC       shift, and go to state 108

    $default  reduce using rule 40 (stmt_list)

    scoped_var_declaration  go to state 109
    type_specifier          go to state 110
    stmt_list               go to state 111


State 93

   34 expression_stmt: expression ';' .

    $default  reduce using rule 34 (expression_stmt)


State 94

   47 expression: mutable ASSIGN . expression

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    expression          go to state 112
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 95

   19 fun_declaration: type_specifier IDENTIFIER '(' params ')' stmt .

    $default  reduce using rule 19 (fun_declaration)


State 96

   64 mutable: IDENTIFIER '[' expression . ']'

    ']'  shift, and go to state 113


State 97

   72 arg_list: expression .

    $default  reduce using rule 72 (arg_list)


State 98

   68 call: IDENTIFIER '(' args . ')'

    ')'  shift, and go to state 114


State 99

   69 args: arg_list .
   71 arg_list: arg_list . ',' expression

    ','  shift, and go to state 115

    $default  reduce using rule 69 (args)


State 100

   65 immutable: '(' expression ')' .

    $default  reduce using rule 65 (immutable)


State 101

   49 simple_exp: simple_exp LOGICAL unary_rel_exp .

    $default  reduce using rule 49 (simple_exp)


State 102

   53 rel_exp: additive_exp RELATIONAL additive_exp .
   55 additive_exp: additive_exp . ADDITIVE multiplicative_exp

    ADDITIVE  shift, and go to state 84

    $default  reduce using rule 53 (rel_exp)


State 103

   55 additive_exp: additive_exp ADDITIVE multiplicative_exp .
   57 multiplicative_exp: multiplicative_exp . MULTIPLICATIVE unary_exp

    MULTIPLICATIVE  shift, and go to state 85

    $default  reduce using rule 55 (additive_exp)


State 104

   57 multiplicative_exp: multiplicative_exp MULTIPLICATIVE unary_exp .

    $default  reduce using rule 57 (multiplicative_exp)


State 105

   41 selection_stmt: IF simple_exp THEN . stmt
   42               | IF simple_exp THEN . stmt ELSE stmt

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IF          shift, and go to state 58
    WHILE       shift, and go to state 59
    BREAK       shift, and go to state 60
    RETURN      shift, and go to state 61
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    ';'         shift, and go to state 62
    '('         shift, and go to state 45
    '{'         shift, and go to state 63

    stmt                go to state 116
    expression_stmt     go to state 65
    compound_stmt       go to state 66
    selection_stmt      go to state 67
    iteration_stmt      go to state 68
    return_stmt         go to state 69
    break_stmt          go to state 70
    expression          go to state 71
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 106

   43 iteration_stmt: WHILE '(' expression . ')' stmt

    ')'  shift, and go to state 117


State 107

   45 return_stmt: RETURN expression ';' .

    $default  reduce using rule 45 (return_stmt)


State 108

    7 scoped_var_declaration: STATIC . type_specifier var_decl_list ';'

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4

    type_specifier  go to state 118


State 109

   37 local_declarations: local_declarations scoped_var_declaration .

    $default  reduce using rule 37 (local_declarations)


State 110

    8 scoped_var_declaration: type_specifier . var_decl_list ';'

    IDENTIFIER  shift, and go to state 34

    var_decl_list  go to state 119
    var_decl_init  go to state 17
    var_decl_id    go to state 18


State 111

   36 compound_stmt: '{' local_declarations stmt_list . '}'
   39 stmt_list: stmt_list . stmt

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IF          shift, and go to state 58
    WHILE       shift, and go to state 59
    BREAK       shift, and go to state 60
    RETURN      shift, and go to state 61
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    ';'         shift, and go to state 62
    '('         shift, and go to state 45
    '{'         shift, and go to state 63
    '}'         shift, and go to state 120

    stmt                go to state 121
    expression_stmt     go to state 65
    compound_stmt       go to state 66
    selection_stmt      go to state 67
    iteration_stmt      go to state 68
    return_stmt         go to state 69
    break_stmt          go to state 70
    expression          go to state 71
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 112

   47 expression: mutable ASSIGN expression .

    $default  reduce using rule 47 (expression)


State 113

   64 mutable: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 64 (mutable)


State 114

   68 call: IDENTIFIER '(' args ')' .

    $default  reduce using rule 68 (call)


State 115

   71 arg_list: arg_list ',' . expression

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    '('         shift, and go to state 45

    expression          go to state 122
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 116

   41 selection_stmt: IF simple_exp THEN stmt .
   42               | IF simple_exp THEN stmt . ELSE stmt

    ELSE  shift, and go to state 123

    ELSE      [reduce using rule 41 (selection_stmt)]
    $default  reduce using rule 41 (selection_stmt)


State 117

   43 iteration_stmt: WHILE '(' expression ')' . stmt

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IF          shift, and go to state 58
    WHILE       shift, and go to state 59
    BREAK       shift, and go to state 60
    RETURN      shift, and go to state 61
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    ';'         shift, and go to state 62
    '('         shift, and go to state 45
    '{'         shift, and go to state 63

    stmt                go to state 124
    expression_stmt     go to state 65
    compound_stmt       go to state 66
    selection_stmt      go to state 67
    iteration_stmt      go to state 68
    return_stmt         go to state 69
    break_stmt          go to state 70
    expression          go to state 71
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 118

    7 scoped_var_declaration: STATIC type_specifier . var_decl_list ';'

    IDENTIFIER  shift, and go to state 34

    var_decl_list  go to state 125
    var_decl_init  go to state 17
    var_decl_id    go to state 18


State 119

    8 scoped_var_declaration: type_specifier var_decl_list . ';'
    9 var_decl_list: var_decl_list . ',' var_decl_init

    ';'  shift, and go to state 126
    ','  shift, and go to state 26


State 120

   36 compound_stmt: '{' local_declarations stmt_list '}' .

    $default  reduce using rule 36 (compound_stmt)


State 121

   39 stmt_list: stmt_list stmt .

    $default  reduce using rule 39 (stmt_list)


State 122

   71 arg_list: arg_list ',' expression .

    $default  reduce using rule 71 (arg_list)


State 123

   42 selection_stmt: IF simple_exp THEN stmt ELSE . stmt

    INTEGER     shift, and go to state 36
    FLOATING    shift, and go to state 37
    STRING      shift, and go to state 38
    IF          shift, and go to state 58
    WHILE       shift, and go to state 59
    BREAK       shift, and go to state 60
    RETURN      shift, and go to state 61
    IDENTIFIER  shift, and go to state 39
    NEGATION    shift, and go to state 40
    UNARY       shift, and go to state 41
    TRUE        shift, and go to state 42
    FALSE       shift, and go to state 43
    VOID        shift, and go to state 44
    ';'         shift, and go to state 62
    '('         shift, and go to state 45
    '{'         shift, and go to state 63

    stmt                go to state 127
    expression_stmt     go to state 65
    compound_stmt       go to state 66
    selection_stmt      go to state 67
    iteration_stmt      go to state 68
    return_stmt         go to state 69
    break_stmt          go to state 70
    expression          go to state 71
    simple_exp          go to state 72
    unary_rel_exp       go to state 47
    rel_exp             go to state 48
    additive_exp        go to state 49
    multiplicative_exp  go to state 50
    unary_exp           go to state 51
    factor              go to state 52
    mutable             go to state 73
    immutable           go to state 54
    call                go to state 55
    const               go to state 56


State 124

   43 iteration_stmt: WHILE '(' expression ')' stmt .

    $default  reduce using rule 43 (iteration_stmt)


State 125

    7 scoped_var_declaration: STATIC type_specifier var_decl_list . ';'
    9 var_decl_list: var_decl_list . ',' var_decl_init

    ';'  shift, and go to state 128
    ','  shift, and go to state 26


State 126

    8 scoped_var_declaration: type_specifier var_decl_list ';' .

    $default  reduce using rule 8 (scoped_var_declaration)


State 127

   42 selection_stmt: IF simple_exp THEN stmt ELSE stmt .

    $default  reduce using rule 42 (selection_stmt)


State 128

    7 scoped_var_declaration: STATIC type_specifier var_decl_list ';' .

    $default  reduce using rule 7 (scoped_var_declaration)
