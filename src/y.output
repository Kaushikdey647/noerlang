State 51 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration_list declaration
    3                 | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier var_decl_list ';'

    7 var_decl_list: var_decl_list ',' var_decl_init
    8              | var_decl_init

    9 var_decl_init: var_decl_id
   10              | var_decl_id '=' simple_exp

   11 var_decl_id: IDENTIFIER
   12            | IDENTIFIER '[' INTEGER ']'

   13 type_specifier: INT_TYPE
   14               | FLOAT_TYPE
   15               | CHAR_TYPE
   16               | STRING_TYPE

   17 simple_exp: simple_exp LOGICAL unary_rel_exp
   18           | unary_rel_exp

   19 unary_rel_exp: NEGATION rel_exp
   20              | rel_exp

   21 rel_exp: additive_exp RELATIONAL additive_exp
   22        | additive_exp

   23 additive_exp: additive_exp ADDITIVE multiplicative_exp
   24             | multiplicative_exp

   25 multiplicative_exp: multiplicative_exp MULTIPLICATIVE unary_exp
   26                   | unary_exp

   27 unary_exp: UNARY unary_exp
   28          | factor

   29 factor: immutable
   30       | mutable

   31 mutable: IDENTIFIER
   32        | IDENTIFIER '[' expression ']'

   33 immutable: '(' expression ')'
   34          | call
   35          | const

   36 call: IDENTIFIER '(' args ')'

   37 args: arg_list
   38     | %empty

   39 arg_list: arg_list ',' expression
   40         | expression

   41 const: INTEGER
   42      | FLOATING
   43      | STRING
   44      | TRUE
   45      | FALSE

   46 fun_declaration: type_specifier IDENTIFIER '(' params ')' stmt

   47 params: param_list
   48       | %empty

   49 param_list: param_list ',' param_type_list
   50           | param_type_list

   51 param_type_list: type_specifier param_id_list

   52 param_id_list: param_id_list ',' param_id
   53              | param_id

   54 param_id: IDENTIFIER
   55         | IDENTIFIER '[' ']'

   56 stmt: expression_stmt
   57     | compound_stmt
   58     | selection_stmt
   59     | iteration_stmt
   60     | return_stmt
   61     | break_stmt

   62 expression_stmt: expression ';'
   63                | ';'

   64 compound_stmt: '{' local_declarations stmt_list '}'

   65 local_declarations: local_declarations var_declaration
   66                   | %empty

   67 stmt_list: stmt_list stmt
   68          | %empty

   69 selection_stmt: IF '(' expression ')' stmt
   70               | IF '(' expression ')' stmt ELSE stmt

   71 iteration_stmt: WHILE '(' expression ')' stmt

   72 return_stmt: RETURN ';'
   73            | RETURN expression ';'

   74 break_stmt: BREAK ';'

   75 expression: mutable ASSIGN expression
   76           | simple_exp


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 33 36 46 69 70 71
    ')' (41) 33 36 46 69 70 71
    ',' (44) 7 39 49 52
    ';' (59) 6 62 63 72 73 74
    '=' (61) 10
    '[' (91) 12 32 55
    ']' (93) 12 32 55
    '{' (123) 64
    '}' (125) 64
    error (256)
    INT_TYPE (258) 13
    FLOAT_TYPE (259) 14
    CHAR_TYPE (260) 15
    STRING_TYPE (261) 16
    INTEGER (262) 12 41
    FLOATING (263) 42
    STRING (264) 43
    IF (265) 69 70
    ELSE (266) 70
    WHILE (267) 71
    BREAK (268) 74
    RETURN (269) 72 73
    ASSIGN (270) 75
    IDENTIFIER (271) 11 12 31 32 36 46 54 55
    LOGICAL (272) 17
    NEGATION (273) 19
    RELATIONAL (274) 21
    ADDITIVE (275) 23
    MULTIPLICATIVE (276) 25
    UNARY (277) 27
    TRUE (278) 44
    FALSE (279) 45


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program (35)
        on left: 1
        on right: 0
    declaration_list (36)
        on left: 2 3
        on right: 1 2
    declaration (37)
        on left: 4 5
        on right: 2 3
    var_declaration (38)
        on left: 6
        on right: 4 65
    var_decl_list (39)
        on left: 7 8
        on right: 6 7
    var_decl_init (40)
        on left: 9 10
        on right: 7 8
    var_decl_id (41)
        on left: 11 12
        on right: 9 10
    type_specifier (42)
        on left: 13 14 15 16
        on right: 6 46 51
    simple_exp (43)
        on left: 17 18
        on right: 10 17 76
    unary_rel_exp (44)
        on left: 19 20
        on right: 17 18
    rel_exp (45)
        on left: 21 22
        on right: 19 20
    additive_exp (46)
        on left: 23 24
        on right: 21 22 23
    multiplicative_exp (47)
        on left: 25 26
        on right: 23 24 25
    unary_exp (48)
        on left: 27 28
        on right: 25 26 27
    factor (49)
        on left: 29 30
        on right: 28
    mutable (50)
        on left: 31 32
        on right: 30 75
    immutable (51)
        on left: 33 34 35
        on right: 29
    call (52)
        on left: 36
        on right: 34
    args (53)
        on left: 37 38
        on right: 36
    arg_list (54)
        on left: 39 40
        on right: 37 39
    const (55)
        on left: 41 42 43 44 45
        on right: 35
    fun_declaration (56)
        on left: 46
        on right: 5
    params (57)
        on left: 47 48
        on right: 46
    param_list (58)
        on left: 49 50
        on right: 47 49
    param_type_list (59)
        on left: 51
        on right: 49 50
    param_id_list (60)
        on left: 52 53
        on right: 51 52
    param_id (61)
        on left: 54 55
        on right: 52 53
    stmt (62)
        on left: 56 57 58 59 60 61
        on right: 46 67 69 70 71
    expression_stmt (63)
        on left: 62 63
        on right: 56
    compound_stmt (64)
        on left: 64
        on right: 57
    local_declarations (65)
        on left: 65 66
        on right: 64 65
    stmt_list (66)
        on left: 67 68
        on right: 64 67
    selection_stmt (67)
        on left: 69 70
        on right: 58
    iteration_stmt (68)
        on left: 71
        on right: 59
    return_stmt (69)
        on left: 72 73
        on right: 60
    break_stmt (70)
        on left: 74
        on right: 61
    expression (71)
        on left: 75 76
        on right: 32 33 39 40 62 69 70 71 73 75


State 0

    0 $accept: . program $end

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4

    program           go to state 5
    declaration_list  go to state 6
    declaration       go to state 7
    var_declaration   go to state 8
    type_specifier    go to state 9
    fun_declaration   go to state 10


State 1

   13 type_specifier: INT_TYPE .

    $default  reduce using rule 13 (type_specifier)


State 2

   14 type_specifier: FLOAT_TYPE .

    $default  reduce using rule 14 (type_specifier)


State 3

   15 type_specifier: CHAR_TYPE .

    $default  reduce using rule 15 (type_specifier)


State 4

   16 type_specifier: STRING_TYPE .

    $default  reduce using rule 16 (type_specifier)


State 5

    0 $accept: program . $end

    $end  shift, and go to state 11


State 6

    1 program: declaration_list .
    2 declaration_list: declaration_list . declaration

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration      go to state 12
    var_declaration  go to state 8
    type_specifier   go to state 9
    fun_declaration  go to state 10


State 7

    3 declaration_list: declaration .

    $default  reduce using rule 3 (declaration_list)


State 8

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 9

    6 var_declaration: type_specifier . var_decl_list ';'
   46 fun_declaration: type_specifier . IDENTIFIER '(' params ')' stmt

    IDENTIFIER  shift, and go to state 13

    var_decl_list  go to state 14
    var_decl_init  go to state 15
    var_decl_id    go to state 16


State 10

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 11

    0 $accept: program $end .

    $default  accept


State 12

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


State 13

   11 var_decl_id: IDENTIFIER .
   12            | IDENTIFIER . '[' INTEGER ']'
   46 fun_declaration: type_specifier IDENTIFIER . '(' params ')' stmt

    '['  shift, and go to state 17
    '('  shift, and go to state 18

    $default  reduce using rule 11 (var_decl_id)


State 14

    6 var_declaration: type_specifier var_decl_list . ';'
    7 var_decl_list: var_decl_list . ',' var_decl_init

    ';'  shift, and go to state 19
    ','  shift, and go to state 20


State 15

    8 var_decl_list: var_decl_init .

    $default  reduce using rule 8 (var_decl_list)


State 16

    9 var_decl_init: var_decl_id .
   10              | var_decl_id . '=' simple_exp

    '='  shift, and go to state 21

    $default  reduce using rule 9 (var_decl_init)


State 17

   12 var_decl_id: IDENTIFIER '[' . INTEGER ']'

    INTEGER  shift, and go to state 22


State 18

   46 fun_declaration: type_specifier IDENTIFIER '(' . params ')' stmt

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4

    $default  reduce using rule 48 (params)

    type_specifier   go to state 23
    params           go to state 24
    param_list       go to state 25
    param_type_list  go to state 26


State 19

    6 var_declaration: type_specifier var_decl_list ';' .

    $default  reduce using rule 6 (var_declaration)


State 20

    7 var_decl_list: var_decl_list ',' . var_decl_init

    IDENTIFIER  shift, and go to state 27

    var_decl_init  go to state 28
    var_decl_id    go to state 16


State 21

   10 var_decl_init: var_decl_id '=' . simple_exp

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    simple_exp          go to state 38
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const               go to state 48


State 22

   12 var_decl_id: IDENTIFIER '[' INTEGER . ']'

    ']'  shift, and go to state 49


State 23

   51 param_type_list: type_specifier . param_id_list

    IDENTIFIER  shift, and go to state 50

    param_id_list  go to state 51
    param_id       go to state 52


State 24

   46 fun_declaration: type_specifier IDENTIFIER '(' params . ')' stmt

    ')'  shift, and go to state 53


State 25

   47 params: param_list .
   49 param_list: param_list . ',' param_type_list

    ','  shift, and go to state 54

    $default  reduce using rule 47 (params)


State 26

   50 param_list: param_type_list .

    $default  reduce using rule 50 (param_list)


State 27

   11 var_decl_id: IDENTIFIER .
   12            | IDENTIFIER . '[' INTEGER ']'

    '['  shift, and go to state 17

    $default  reduce using rule 11 (var_decl_id)


State 28

    7 var_decl_list: var_decl_list ',' var_decl_init .

    $default  reduce using rule 7 (var_decl_list)


State 29

   41 const: INTEGER .

    $default  reduce using rule 41 (const)


State 30

   42 const: FLOATING .

    $default  reduce using rule 42 (const)


State 31

   43 const: STRING .

    $default  reduce using rule 43 (const)


State 32

   31 mutable: IDENTIFIER .
   32        | IDENTIFIER . '[' expression ']'
   36 call: IDENTIFIER . '(' args ')'

    '['  shift, and go to state 55
    '('  shift, and go to state 56

    $default  reduce using rule 31 (mutable)


State 33

   19 unary_rel_exp: NEGATION . rel_exp

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    rel_exp             go to state 57
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const               go to state 48


State 34

   27 unary_exp: UNARY . unary_exp

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    unary_exp  go to state 58
    factor     go to state 44
    mutable    go to state 45
    immutable  go to state 46
    call       go to state 47
    const      go to state 48


State 35

   44 const: TRUE .

    $default  reduce using rule 44 (const)


State 36

   45 const: FALSE .

    $default  reduce using rule 45 (const)


State 37

   33 immutable: '(' . expression ')'

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    expression          go to state 61


State 38

   10 var_decl_init: var_decl_id '=' simple_exp .
   17 simple_exp: simple_exp . LOGICAL unary_rel_exp

    LOGICAL  shift, and go to state 62

    $default  reduce using rule 10 (var_decl_init)


State 39

   18 simple_exp: unary_rel_exp .

    $default  reduce using rule 18 (simple_exp)


State 40

   20 unary_rel_exp: rel_exp .

    $default  reduce using rule 20 (unary_rel_exp)


State 41

   21 rel_exp: additive_exp . RELATIONAL additive_exp
   22        | additive_exp .
   23 additive_exp: additive_exp . ADDITIVE multiplicative_exp

    RELATIONAL  shift, and go to state 63
    ADDITIVE    shift, and go to state 64

    $default  reduce using rule 22 (rel_exp)


State 42

   24 additive_exp: multiplicative_exp .
   25 multiplicative_exp: multiplicative_exp . MULTIPLICATIVE unary_exp

    MULTIPLICATIVE  shift, and go to state 65

    $default  reduce using rule 24 (additive_exp)


State 43

   26 multiplicative_exp: unary_exp .

    $default  reduce using rule 26 (multiplicative_exp)


State 44

   28 unary_exp: factor .

    $default  reduce using rule 28 (unary_exp)


State 45

   30 factor: mutable .

    $default  reduce using rule 30 (factor)


State 46

   29 factor: immutable .

    $default  reduce using rule 29 (factor)


State 47

   34 immutable: call .

    $default  reduce using rule 34 (immutable)


State 48

   35 immutable: const .

    $default  reduce using rule 35 (immutable)


State 49

   12 var_decl_id: IDENTIFIER '[' INTEGER ']' .

    $default  reduce using rule 12 (var_decl_id)


State 50

   54 param_id: IDENTIFIER .
   55         | IDENTIFIER . '[' ']'

    '['  shift, and go to state 66

    $default  reduce using rule 54 (param_id)


State 51

   51 param_type_list: type_specifier param_id_list .
   52 param_id_list: param_id_list . ',' param_id

    ','  shift, and go to state 67

    ','       [reduce using rule 51 (param_type_list)]
    $default  reduce using rule 51 (param_type_list)


State 52

   53 param_id_list: param_id .

    $default  reduce using rule 53 (param_id_list)


State 53

   46 fun_declaration: type_specifier IDENTIFIER '(' params ')' . stmt

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IF          shift, and go to state 68
    WHILE       shift, and go to state 69
    BREAK       shift, and go to state 70
    RETURN      shift, and go to state 71
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ';'         shift, and go to state 72
    '('         shift, and go to state 37
    '{'         shift, and go to state 73

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    stmt                go to state 74
    expression_stmt     go to state 75
    compound_stmt       go to state 76
    selection_stmt      go to state 77
    iteration_stmt      go to state 78
    return_stmt         go to state 79
    break_stmt          go to state 80
    expression          go to state 81


State 54

   49 param_list: param_list ',' . param_type_list

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4

    type_specifier   go to state 23
    param_type_list  go to state 82


State 55

   32 mutable: IDENTIFIER '[' . expression ']'

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    expression          go to state 83


State 56

   36 call: IDENTIFIER '(' . args ')'

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    $default  reduce using rule 38 (args)

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    args                go to state 84
    arg_list            go to state 85
    const               go to state 48
    expression          go to state 86


State 57

   19 unary_rel_exp: NEGATION rel_exp .

    $default  reduce using rule 19 (unary_rel_exp)


State 58

   27 unary_exp: UNARY unary_exp .

    $default  reduce using rule 27 (unary_exp)


State 59

   17 simple_exp: simple_exp . LOGICAL unary_rel_exp
   76 expression: simple_exp .

    LOGICAL  shift, and go to state 62

    $default  reduce using rule 76 (expression)


State 60

   30 factor: mutable .
   75 expression: mutable . ASSIGN expression

    ASSIGN  shift, and go to state 87

    $default  reduce using rule 30 (factor)


State 61

   33 immutable: '(' expression . ')'

    ')'  shift, and go to state 88


State 62

   17 simple_exp: simple_exp LOGICAL . unary_rel_exp

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    unary_rel_exp       go to state 89
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const               go to state 48


State 63

   21 rel_exp: additive_exp RELATIONAL . additive_exp

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    additive_exp        go to state 90
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const               go to state 48


State 64

   23 additive_exp: additive_exp ADDITIVE . multiplicative_exp

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    multiplicative_exp  go to state 91
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 45
    immutable           go to state 46
    call                go to state 47
    const               go to state 48


State 65

   25 multiplicative_exp: multiplicative_exp MULTIPLICATIVE . unary_exp

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    unary_exp  go to state 92
    factor     go to state 44
    mutable    go to state 45
    immutable  go to state 46
    call       go to state 47
    const      go to state 48


State 66

   55 param_id: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 93


State 67

   52 param_id_list: param_id_list ',' . param_id

    IDENTIFIER  shift, and go to state 50

    param_id  go to state 94


State 68

   69 selection_stmt: IF . '(' expression ')' stmt
   70               | IF . '(' expression ')' stmt ELSE stmt

    '('  shift, and go to state 95


State 69

   71 iteration_stmt: WHILE . '(' expression ')' stmt

    '('  shift, and go to state 96


State 70

   74 break_stmt: BREAK . ';'

    ';'  shift, and go to state 97


State 71

   72 return_stmt: RETURN . ';'
   73            | RETURN . expression ';'

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ';'         shift, and go to state 98
    '('         shift, and go to state 37

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    expression          go to state 99


State 72

   63 expression_stmt: ';' .

    $default  reduce using rule 63 (expression_stmt)


State 73

   64 compound_stmt: '{' . local_declarations stmt_list '}'

    $default  reduce using rule 66 (local_declarations)

    local_declarations  go to state 100


State 74

   46 fun_declaration: type_specifier IDENTIFIER '(' params ')' stmt .

    $default  reduce using rule 46 (fun_declaration)


State 75

   56 stmt: expression_stmt .

    $default  reduce using rule 56 (stmt)


State 76

   57 stmt: compound_stmt .

    $default  reduce using rule 57 (stmt)


State 77

   58 stmt: selection_stmt .

    $default  reduce using rule 58 (stmt)


State 78

   59 stmt: iteration_stmt .

    $default  reduce using rule 59 (stmt)


State 79

   60 stmt: return_stmt .

    $default  reduce using rule 60 (stmt)


State 80

   61 stmt: break_stmt .

    $default  reduce using rule 61 (stmt)


State 81

   62 expression_stmt: expression . ';'

    ';'  shift, and go to state 101


State 82

   49 param_list: param_list ',' param_type_list .

    $default  reduce using rule 49 (param_list)


State 83

   32 mutable: IDENTIFIER '[' expression . ']'

    ']'  shift, and go to state 102


State 84

   36 call: IDENTIFIER '(' args . ')'

    ')'  shift, and go to state 103


State 85

   37 args: arg_list .
   39 arg_list: arg_list . ',' expression

    ','  shift, and go to state 104

    $default  reduce using rule 37 (args)


State 86

   40 arg_list: expression .

    $default  reduce using rule 40 (arg_list)


State 87

   75 expression: mutable ASSIGN . expression

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    expression          go to state 105


State 88

   33 immutable: '(' expression ')' .

    $default  reduce using rule 33 (immutable)


State 89

   17 simple_exp: simple_exp LOGICAL unary_rel_exp .

    $default  reduce using rule 17 (simple_exp)


State 90

   21 rel_exp: additive_exp RELATIONAL additive_exp .
   23 additive_exp: additive_exp . ADDITIVE multiplicative_exp

    ADDITIVE  shift, and go to state 64

    $default  reduce using rule 21 (rel_exp)


State 91

   23 additive_exp: additive_exp ADDITIVE multiplicative_exp .
   25 multiplicative_exp: multiplicative_exp . MULTIPLICATIVE unary_exp

    MULTIPLICATIVE  shift, and go to state 65

    $default  reduce using rule 23 (additive_exp)


State 92

   25 multiplicative_exp: multiplicative_exp MULTIPLICATIVE unary_exp .

    $default  reduce using rule 25 (multiplicative_exp)


State 93

   55 param_id: IDENTIFIER '[' ']' .

    $default  reduce using rule 55 (param_id)


State 94

   52 param_id_list: param_id_list ',' param_id .

    $default  reduce using rule 52 (param_id_list)


State 95

   69 selection_stmt: IF '(' . expression ')' stmt
   70               | IF '(' . expression ')' stmt ELSE stmt

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    expression          go to state 106


State 96

   71 iteration_stmt: WHILE '(' . expression ')' stmt

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    expression          go to state 107


State 97

   74 break_stmt: BREAK ';' .

    $default  reduce using rule 74 (break_stmt)


State 98

   72 return_stmt: RETURN ';' .

    $default  reduce using rule 72 (return_stmt)


State 99

   73 return_stmt: RETURN expression . ';'

    ';'  shift, and go to state 108


State 100

   64 compound_stmt: '{' local_declarations . stmt_list '}'
   65 local_declarations: local_declarations . var_declaration

    INT_TYPE     shift, and go to state 1
    FLOAT_TYPE   shift, and go to state 2
    CHAR_TYPE    shift, and go to state 3
    STRING_TYPE  shift, and go to state 4

    $default  reduce using rule 68 (stmt_list)

    var_declaration  go to state 109
    type_specifier   go to state 110
    stmt_list        go to state 111


State 101

   62 expression_stmt: expression ';' .

    $default  reduce using rule 62 (expression_stmt)


State 102

   32 mutable: IDENTIFIER '[' expression ']' .

    $default  reduce using rule 32 (mutable)


State 103

   36 call: IDENTIFIER '(' args ')' .

    $default  reduce using rule 36 (call)


State 104

   39 arg_list: arg_list ',' . expression

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    '('         shift, and go to state 37

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    expression          go to state 112


State 105

   75 expression: mutable ASSIGN expression .

    $default  reduce using rule 75 (expression)


State 106

   69 selection_stmt: IF '(' expression . ')' stmt
   70               | IF '(' expression . ')' stmt ELSE stmt

    ')'  shift, and go to state 113


State 107

   71 iteration_stmt: WHILE '(' expression . ')' stmt

    ')'  shift, and go to state 114


State 108

   73 return_stmt: RETURN expression ';' .

    $default  reduce using rule 73 (return_stmt)


State 109

   65 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 65 (local_declarations)


State 110

    6 var_declaration: type_specifier . var_decl_list ';'

    IDENTIFIER  shift, and go to state 27

    var_decl_list  go to state 14
    var_decl_init  go to state 15
    var_decl_id    go to state 16


State 111

   64 compound_stmt: '{' local_declarations stmt_list . '}'
   67 stmt_list: stmt_list . stmt

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IF          shift, and go to state 68
    WHILE       shift, and go to state 69
    BREAK       shift, and go to state 70
    RETURN      shift, and go to state 71
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ';'         shift, and go to state 72
    '('         shift, and go to state 37
    '{'         shift, and go to state 73
    '}'         shift, and go to state 115

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    stmt                go to state 116
    expression_stmt     go to state 75
    compound_stmt       go to state 76
    selection_stmt      go to state 77
    iteration_stmt      go to state 78
    return_stmt         go to state 79
    break_stmt          go to state 80
    expression          go to state 81


State 112

   39 arg_list: arg_list ',' expression .

    $default  reduce using rule 39 (arg_list)


State 113

   69 selection_stmt: IF '(' expression ')' . stmt
   70               | IF '(' expression ')' . stmt ELSE stmt

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IF          shift, and go to state 68
    WHILE       shift, and go to state 69
    BREAK       shift, and go to state 70
    RETURN      shift, and go to state 71
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ';'         shift, and go to state 72
    '('         shift, and go to state 37
    '{'         shift, and go to state 73

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    stmt                go to state 117
    expression_stmt     go to state 75
    compound_stmt       go to state 76
    selection_stmt      go to state 77
    iteration_stmt      go to state 78
    return_stmt         go to state 79
    break_stmt          go to state 80
    expression          go to state 81


State 114

   71 iteration_stmt: WHILE '(' expression ')' . stmt

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IF          shift, and go to state 68
    WHILE       shift, and go to state 69
    BREAK       shift, and go to state 70
    RETURN      shift, and go to state 71
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ';'         shift, and go to state 72
    '('         shift, and go to state 37
    '{'         shift, and go to state 73

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    stmt                go to state 118
    expression_stmt     go to state 75
    compound_stmt       go to state 76
    selection_stmt      go to state 77
    iteration_stmt      go to state 78
    return_stmt         go to state 79
    break_stmt          go to state 80
    expression          go to state 81


State 115

   64 compound_stmt: '{' local_declarations stmt_list '}' .

    $default  reduce using rule 64 (compound_stmt)


State 116

   67 stmt_list: stmt_list stmt .

    $default  reduce using rule 67 (stmt_list)


State 117

   69 selection_stmt: IF '(' expression ')' stmt .
   70               | IF '(' expression ')' stmt . ELSE stmt

    ELSE  shift, and go to state 119

    ELSE      [reduce using rule 69 (selection_stmt)]
    $default  reduce using rule 69 (selection_stmt)


State 118

   71 iteration_stmt: WHILE '(' expression ')' stmt .

    $default  reduce using rule 71 (iteration_stmt)


State 119

   70 selection_stmt: IF '(' expression ')' stmt ELSE . stmt

    INTEGER     shift, and go to state 29
    FLOATING    shift, and go to state 30
    STRING      shift, and go to state 31
    IF          shift, and go to state 68
    WHILE       shift, and go to state 69
    BREAK       shift, and go to state 70
    RETURN      shift, and go to state 71
    IDENTIFIER  shift, and go to state 32
    NEGATION    shift, and go to state 33
    UNARY       shift, and go to state 34
    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    ';'         shift, and go to state 72
    '('         shift, and go to state 37
    '{'         shift, and go to state 73

    simple_exp          go to state 59
    unary_rel_exp       go to state 39
    rel_exp             go to state 40
    additive_exp        go to state 41
    multiplicative_exp  go to state 42
    unary_exp           go to state 43
    factor              go to state 44
    mutable             go to state 60
    immutable           go to state 46
    call                go to state 47
    const               go to state 48
    stmt                go to state 120
    expression_stmt     go to state 75
    compound_stmt       go to state 76
    selection_stmt      go to state 77
    iteration_stmt      go to state 78
    return_stmt         go to state 79
    break_stmt          go to state 80
    expression          go to state 81


State 120

   70 selection_stmt: IF '(' expression ')' stmt ELSE stmt .

    $default  reduce using rule 70 (selection_stmt)
